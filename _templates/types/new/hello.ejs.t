---
to: src/sections.d.ts
---
/*
 *  Autogenerated file. Do not edit manually
 */
import { LocaleSection, LocaleValueResolver } from './domain';
import { KeysOfType } from './util';
<%
    const methodName = 'section';
    const overloadsCount = 8;

    const n = (v) => v ? v : '';
    const getArgs = (i) => [...new Array(i + 1).keys()].map(k => `key${n(k)}: K${n(k)}`).join(', ');
    const getSection = (i) => [...new Array(i).keys()].map(k => `[K${n(k)}]`).join('');
-%>

export interface RecursiveSections<Section extends LocaleSection, DefaultType, ResultMap> {
<%
    for (let i = 0; i < overloadsCount; i++) {
-%>
<%# separate args %>
    <%- methodName + '<' %>
<%
    for (let j = 0; j <= i; j++) {
-%>
        K<%= n(j) %> extends KeysOfType<Section<%= getSection(j) %>, LocaleSection>,
<%
    }
-%>
    > (<%= getArgs(i) %>)
    : LocaleValueResolver<Section<%= getSection(i + 1) %>, DefaultType, ResultMap>;
<% } %>
}
